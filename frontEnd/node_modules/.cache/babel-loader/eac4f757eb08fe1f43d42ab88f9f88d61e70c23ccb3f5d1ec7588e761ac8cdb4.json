{"ast":null,"code":"var _jsxFileName = \"/home/dann/code/Venture/Venture/frontEnd/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Here you would fetch the user data with the token\n      setUser({\n        email: 'test@example.com'\n      }); // Placeholder for actual user data fetching\n    }\n  }, []);\n  const login = (email, password) => {\n    // Perform login and set user\n    // Example: setUser({ email });\n  };\n  const register = (email, password) => {\n    // Perform registration and set user\n    // Example: setUser({ email });\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","email","login","password","register","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dann/code/Venture/Venture/frontEnd/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Here you would fetch the user data with the token\n      setUser({ email: 'test@example.com' }); // Placeholder for actual user data fetching\n    }\n  }, []);\n\n  const login = (email, password) => {\n    // Perform login and set user\n    // Example: setUser({ email });\n  };\n\n  const register = (email, password) => {\n    // Perform registration and set user\n    // Example: setUser({ email });\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACAD,OAAO,CAAC;QAAEI,KAAK,EAAE;MAAmB,CAAC,CAAC,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACD,KAAK,EAAEE,QAAQ,KAAK;IACjC;IACA;EAAA,CACD;EAED,MAAMC,QAAQ,GAAGA,CAACH,KAAK,EAAEE,QAAQ,KAAK;IACpC;IACA;EAAA,CACD;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBR,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEM,KAAK;MAAEE,QAAQ;MAAEC;IAAO,CAAE;IAAAX,QAAA,EAC5DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CA/BIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAiClB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}